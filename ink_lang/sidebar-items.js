initSidebarItems({"attr":[["contract",""]],"enum":[["DispatchError","A dispatch error."],["DispatchMode","The contract dispatch mode."]],"fn":[["execute_constructor","Executes the given constructor closure."],["execute_message","Executes the given `&self` message closure."],["execute_message_mut","Executes the given `&mut self` message closure."]],"struct":[["DispatchRetCode","A return code indicating success or error in a compact form."],["EnvAccess","A typed accessor to the environment."]],"trait":[["BaseEvent","Defines a base event type for the contract."],["Constructor","A dispatchable contract constructor message."],["ConstructorDispatcher","Connector trait: Connects enum dispatcher for constructors with the contract."],["DispatchUsingMode","Trait implemented by contracts themselves in order to provide a clean interface for the C-ABI specified `call` and `create` functions to forward calls to."],["EmitEvent","Implemented by contracts in order to override `env().emit_event(..)` syntax for emitting of ink! contract events."],["Env","Simplifies interaction with the host environment via `self`."],["Execute","Connector trait used to start the execution of a smart contract."],["FnInput","Dispatchable functions that have inputs."],["FnOutput","Dispatchable functions that have an output."],["FnSelector","The selector of dispatchable functions."],["FnState","The storage state that the dispatchable function acts on."],["ForwardCall","Implemented by contracts that are compiled as dependencies."],["ForwardCallMut","Implemented by contracts that are compiled as dependencies."],["MessageDispatcher","Connector trait: Connects enum dispatcher for messages with the contract."],["MessageMut","A `&mut self` dispatchable contract message."],["MessageRef","A `&self` dispatchable contract message."],["StaticEnv","Simplifies interaction with the host environment via `Self`."],["ToAccountId","Implemented by contracts that are compiled as dependencies."]],"type":[["DispatchResult","A dispatch result."]]});