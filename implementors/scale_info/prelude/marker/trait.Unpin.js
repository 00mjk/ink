(function() {var implementors = {};
implementors["scale_info"] = [{"text":"impl Unpin for PathNotAssigned","synthetic":true,"types":[]},{"text":"impl Unpin for PathAssigned","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for TypeBuilder&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for NoFields","synthetic":true,"types":[]},{"text":"impl Unpin for NamedFields","synthetic":true,"types":[]},{"text":"impl Unpin for UnnamedFields","synthetic":true,"types":[]},{"text":"impl Unpin for Fields","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for FieldsBuilder&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for NoVariants","synthetic":true,"types":[]},{"text":"impl Unpin for VariantFields","synthetic":true,"types":[]},{"text":"impl Unpin for Fieldless","synthetic":true,"types":[]},{"text":"impl Unpin for Variants","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for VariantsBuilder&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for MetaForm","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for PortableForm&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for UntrackedSymbol&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Symbol&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Interner&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for MetaType","synthetic":true,"types":[]},{"text":"impl Unpin for Registry","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for PortableRegistry&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TypeDefComposite&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Form&gt;::String: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Form&gt;::Type: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Field&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Form&gt;::String: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Form&gt;::Type: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Path&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Form&gt;::String: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for PathError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TypeDefVariant&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Form&gt;::String: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Form&gt;::Type: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Variant&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Form&gt;::String: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Form&gt;::Type: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Type&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Form&gt;::String: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Form&gt;::Type: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TypeDef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Form&gt;::String: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Form&gt;::Type: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for TypeDefPrimitive","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TypeDefArray&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Form&gt;::Type: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TypeDefTuple&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Form&gt;::Type: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TypeDefSequence&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Form&gt;::Type: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TypeDefPhantom&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Form&gt;::Type: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()