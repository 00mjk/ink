initSidebarItems({"derive":[["HasLayout",""]],"enum":[["StorageLayout","Either a concrete layout bound or another layout sub-struct."]],"struct":[["ConstructorSpec","Describes a constructor of a contract."],["ConstructorSpecBuilder","A builder for constructors."],["ContractSpec","Describes a contract."],["ContractSpecBuilder","A builder for contracts."],["EventParamSpec","Describes a pair of parameter name and type."],["EventParamSpecBuilder","Used to construct an event parameter specification."],["EventSpec","Describes an event definition."],["EventSpecBuilder","An event specification builder."],["InkProject","An entire ink! project for ABI file generation purposes."],["LayoutField","The layout for a particular field of a struct layout."],["LayoutKey","A concrete range of keys."],["LayoutRange","Direct range of associated storage keys."],["LayoutStruct","A struct storage layout."],["MessageParamSpec","Describes a pair of parameter name and type."],["MessageParamSpecBuilder","Used to construct a message parameter specification."],["MessageSpec","Describes a contract message."],["MessageSpecBuilder","A builder for messages."],["ReturnTypeSpec","Describes the return type of a contract message."],["TypeSpec","A type specification."]],"trait":[["HasLayout","Implemented by types that have a storage layout."]],"type":[["DisplayName","Describes the syntactical name of a type at a given type position."]]});